# -*- coding: utf-8 -*-
"""
Created on Tue Aug  9 17:02:24 2022

@author: dorsh
"""
import numpy as np
import scipy
import matplotlib.pyplot as plt
import pandas as pd
from scipy.stats import linregress
from scipy.optimize import curve_fit as cfit

#%% wide unit
alpha = 0.11 #rad/bar
F = 0.49 # N
l = 45.6e-2 #meter
m = 43.2e-3 # kg/bar
N = 72
d = 1.27e-2 # meter/bar

k = F*l / (2*alpha)


I = m*(l**2)/12 
v = d*(k/I)**0.5  # m/s (with out d is bar/sec)
L =N * d

# holded endge
print("holded edge:")
for n in    range(1,9):
    f = n * v / (2*L)
    print("f(%d)=%f"%(n,f))
    
exp_f_holded = np.array([0.303,0.529,0.778,1.01,1.265,1.449,1.694])
n = np.array(range(1,8))
plt.figure()
plt.plot(n,exp_f_holded,'*')
plt.grid()
plt.show()

    
# free edge
print("\nfree edge:")
for n in range(1,10):
    f = (2*n-L)*v/(4*L)
    print("f(%d)=%f"%(n,f))
    
exp_f_free  = np.array([0.401,0.645,0.917,1.09,1.449,1.694,2])
n = np.array(range(2,9))
plt.figure()
plt.plot(n,exp_f_holded,'*')
plt.grid()
plt.show()

